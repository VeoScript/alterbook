// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
  relationMode = "prisma"
}

model User {
  id                  String              @id                       @default(cuid())
  image               String?             @db.LongText     
  username            String                                        @unique
  email               String?                                       @unique
  password            String
  shortbio            String?             @db.LongText
  created_at          DateTime            @db.DateTime(6)           @default(now())
  updated_at          DateTime            @db.DateTime(6)           @default(now())
  posts               Post[]
  likes               Like[]
}

model Post {
  id                  String              @id                       @default(cuid())
  image               String?             @db.LongText
  story               String              @db.LongText
  user                User                                          @relation(fields: [userId], references: [id],  onDelete: Cascade, onUpdate: Cascade)
  userId              String
  created_at          DateTime            @db.DateTime(6)           @default(now())
  updated_at          DateTime            @db.DateTime(6)           @default(now())
  likes               Like[]

  @@index([userId])
}

model Like {
  id                  String              @id                       @default(cuid())
  created_at          DateTime            @db.DateTime(6)           @default(now())
  updated_at          DateTime            @db.DateTime(6)           @default(now())
  post                Post                                          @relation(fields: [postId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  postId              String
  user                User                                          @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId              String

  @@index([postId])
  @@index([userId])
}
